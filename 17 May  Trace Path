class Solution{
public:
    int isPossible(int n, int mm, string s){
         
         int maxc=0;
         int maxr=0;
         int c=0,r=0;
         
         unordered_map<char,int> m;
         m['L']=-1,m['R']=1,m['D']=-1,m['U']=1;
         
         for(int i=0; i<s.size(); i++){
             
             if(s[i]=='L' || s[i]=='R'){
                 
                 c+=m[s[i]];
                 maxc=max(maxc,c);
                 
                 if(c<0)c=0, maxc=maxc+1;
                 if(maxc>=mm) return 0;
             }
             
             if(s[i]=='D' || s[i]=='U'){
                 
                 r+=m[s[i]];
                 maxr=max(maxr,r);
                 
                 if(r<0)r=0, maxr=maxr+1;
                 if(maxr>=n) return 0;
             }
         }
         
         return 1;
    }
};
